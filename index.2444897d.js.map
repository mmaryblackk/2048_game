{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable no-shadow */ function $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = \"idle\";\n        this.board = initialState || this.createEmptyBoard();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var newRow = _this.board[row].filter(function(v) {\n                        return v !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] *= 2;\n                        _this.score += newRow[i];\n                        newRow[i + 1] = 0;\n                    }\n                    newRow = newRow.filter(function(v) {\n                        return v !== 0;\n                    });\n                    while(newRow.length < _this.size)newRow.push(0);\n                    if (_this.board[row].join(\",\") !== newRow.join(\",\")) moved = true;\n                    _this.board[row] = newRow;\n                };\n                var moved = false;\n                for(var row = 0; row < this.size; row++)_loop(row);\n                if (moved) this.afterMove();\n                return moved;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                var moved = this.moveLeft();\n                this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                return moved;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.transpose();\n                var moved = this.moveLeft();\n                this.transpose();\n                return moved;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.transpose();\n                var moved = this.moveRight();\n                this.transpose();\n                return moved;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var newBoard = this.createEmptyBoard();\n                for(var r = 0; r < this.size; r++)for(var c = 0; c < this.size; c++)newBoard[r][c] = this.board[c][r];\n                this.board = newBoard;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var r = 0; r < this.size; r++){\n                    for(var c = 0; c < this.size; c++)if (this.board[r][c] === 0) emptyCells.push({\n                        r: r,\n                        c: c\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], r1 = _emptyCells_Math_floor.r, c1 = _emptyCells_Math_floor.c;\n                this.board[r1][c1] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"afterMove\",\n            value: function afterMove() {\n                this.addRandomTile();\n                if (this.checkWin()) this.status = \"win\";\n                else if (!this.movesAvailable()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                return this.board.some(function(row) {\n                    return row.includes(2048);\n                });\n            }\n        },\n        {\n            key: \"movesAvailable\",\n            value: function movesAvailable() {\n                for(var r = 0; r < this.size; r++)for(var c = 0; c < this.size; c++){\n                    if (this.board[r][c] === 0) return true;\n                    if (r < this.size - 1 && this.board[r][c] === this.board[r + 1][c]) return true;\n                    if (c < this.size - 1 && this.board[r][c] === this.board[r][c + 1]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$table = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$scoreDisplay = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$mainButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$message = document.querySelector(\".message-start\");\nfunction $197cd56b15c33885$var$render() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var cells = $197cd56b15c33885$var$table.querySelectorAll(\".field-cell\");\n    state.flat().forEach(function(value, index) {\n        var cell = cells[index];\n        cell.className = \"field-cell\";\n        if (value) {\n            cell.textContent = value;\n            cell.classList.add(\"field-cell--\".concat(value));\n        } else cell.textContent = \"\";\n    });\n    $197cd56b15c33885$var$scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\n$197cd56b15c33885$var$mainButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$mainButton.classList.contains(\"start\")) $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    if ($197cd56b15c33885$var$message) $197cd56b15c33885$var$message.classList.add(\"hidden\");\n    document.querySelectorAll(\".message\").forEach(function(msg) {\n        return msg.classList.add(\"hidden\");\n    });\n    $197cd56b15c33885$var$render();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var moved = false;\n    switch(e.key){\n        case \"ArrowLeft\":\n            moved = $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            moved = $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            moved = $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            moved = $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    if (moved) {\n        if ($197cd56b15c33885$var$mainButton.classList.contains(\"start\")) {\n            $197cd56b15c33885$var$mainButton.classList.remove(\"start\");\n            $197cd56b15c33885$var$mainButton.classList.add(\"restart\");\n            $197cd56b15c33885$var$mainButton.textContent = \"Restart\";\n        }\n    }\n    $197cd56b15c33885$var$render();\n});\n\n})();\n//# sourceMappingURL=index.2444897d.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst table = document.querySelector('.game-field');\nconst scoreDisplay = document.querySelector('.game-score');\nconst mainButton = document.querySelector('.start');\nconst message = document.querySelector('.message-start');\n\nfunction render() {\n  const state = game.getState();\n  const cells = table.querySelectorAll('.field-cell');\n\n  state.flat().forEach((value, index) => {\n    const cell = cells[index];\n\n    cell.className = 'field-cell';\n\n    if (value) {\n      cell.textContent = value;\n      cell.classList.add(`field-cell--${value}`);\n    } else {\n      cell.textContent = '';\n    }\n  });\n\n  scoreDisplay.textContent = game.getScore();\n\n  if (game.getStatus() === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nmainButton.addEventListener('click', () => {\n  if (mainButton.classList.contains('start')) {\n    game.start();\n  } else {\n    game.restart();\n  }\n\n  if (message) {\n    message.classList.add('hidden');\n  }\n\n  document\n    .querySelectorAll('.message')\n    .forEach((msg) => msg.classList.add('hidden'));\n  render();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  let moved = false;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moved = game.moveLeft();\n      break;\n    case 'ArrowRight':\n      moved = game.moveRight();\n      break;\n    case 'ArrowUp':\n      moved = game.moveUp();\n      break;\n    case 'ArrowDown':\n      moved = game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  if (moved) {\n    if (mainButton.classList.contains('start')) {\n      mainButton.classList.remove('start');\n      mainButton.classList.add('restart');\n      mainButton.textContent = 'Restart';\n    }\n  }\n  render();\n});\n","/* eslint-disable no-shadow */\n'use strict';\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   */\n  constructor(initialState) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle';\n    this.board = initialState || this.createEmptyBoard();\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let row = 0; row < this.size; row++) {\n      let newRow = this.board[row].filter((v) => v !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] *= 2;\n          this.score += newRow[i];\n          newRow[i + 1] = 0;\n        }\n      }\n      newRow = newRow.filter((v) => v !== 0);\n\n      while (newRow.length < this.size) {\n        newRow.push(0);\n      }\n\n      if (this.board[row].join(',') !== newRow.join(',')) {\n        moved = true;\n      }\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.afterMove();\n    }\n\n    return moved;\n  }\n  moveRight() {\n    this.board = this.board.map((row) => row.reverse());\n\n    const moved = this.moveLeft();\n\n    this.board = this.board.map((row) => row.reverse());\n\n    return moved;\n  }\n  moveUp() {\n    this.transpose();\n\n    const moved = this.moveLeft();\n\n    this.transpose();\n\n    return moved;\n  }\n  moveDown() {\n    this.transpose();\n\n    const moved = this.moveRight();\n\n    this.transpose();\n\n    return moved;\n  }\n\n  transpose() {\n    const newBoard = this.createEmptyBoard();\n\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        newBoard[r][c] = this.board[c][r];\n      }\n    }\n    this.board = newBoard;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.start();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          emptyCells.push({\n            r,\n            c,\n          });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const { r, c } = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[r][c] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  afterMove() {\n    this.addRandomTile();\n\n    if (this.checkWin()) {\n      this.status = 'win';\n    } else if (!this.movesAvailable()) {\n      this.status = 'lose';\n    }\n  }\n\n  checkWin() {\n    return this.board.some((row) => row.includes(2048));\n  }\n\n  movesAvailable() {\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          return true;\n        }\n\n        if (r < this.size - 1 && this.board[r][c] === this.board[r + 1][c]) {\n          return true;\n        }\n\n        if (c < this.size - 1 && this.board[r][c] === this.board[r][c + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","size","score","status","board","createEmptyBoard","key","value","_this","from","fill","moved","row","_loop","newRow","filter","v","push","join","afterMove","map","reverse","moveLeft","transpose","moveRight","newBoard","r","c","isArray","iter","Symbol","iterator","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","addRandomTile","start","emptyCells","_emptyCells_Math_floor","Math","floor","random","r1","c1","checkWin","movesAvailable","some","includes","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$table","document","querySelector","$197cd56b15c33885$var$scoreDisplay","$197cd56b15c33885$var$mainButton","$197cd56b15c33885$var$message","$197cd56b15c33885$var$render","state","getState","cells","querySelectorAll","flat","forEach","index","cell","className","textContent","classList","add","concat","getScore","getStatus","remove","addEventListener","contains","restart","msg","e","moveUp","moveDown"],"version":3,"file":"index.2444897d.js.map"}